name: reusable_build_tests_rust_pyo3

on:
  workflow_dispatch:
    inputs:
      py_interface_folder:
        description: "Location of the py interface folder"
        required: true
        type: string
      has_python_tests:
        description: "Is there a python_tests folder inside the python interface folder"
        required: false
        default: false
        type: boolean
      windows:
        description: "Run unittests on windows"
        required: false
        default: false
        type: boolean
      macos:
        description: "Run unittests on macOS"
        required: false
        default: true
        type: boolean
      python_3_13:
        description: "Run unittest on Python 3.13"
        required: false
        default: true
        type: boolean
  workflow_call:
    inputs:
      py_interface_folder:
        description: "Location of the py interface folder"
        required: true
        type: string
      has_python_tests:
        description: "Is there a python_tests folder inside the python interface folder"
        required: false
        default: false
        type: boolean
      windows:
        description: "Run unittests on windows"
        required: false
        default: false
        type: boolean
      macos:
        description: "Run unittests on macOS"
        required: false
        default: true
        type: boolean
      python_3_13:
        description: "Run unittest on Python 3.13"
        required: false
        default: true
        type: boolean

jobs:
  build_test_linux:
    name: build_test_linux_${{ matrix.python.interpreter }}
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python: [
            { py: '3.9', interpreter: "python3.9" },
            { py: '3.10', interpreter: "python3.10" },
            { py: '3.11', interpreter: "python3.11" },
            { py: '3.12', interpreter: "python3.12" },
        ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python.py }}
      - name: Install Dependencies
        run: pip install maturin pytest numpy
      - name: Build Test
        run: pip install ${{ inputs.py_interface_folder }}/
      - name: Test pytest
        if: ${{ inputs.has_python_tests }}
        run: pytest ${{ inputs.py_interface_folder }}/python_tests
  
  build_test_linux_py313:
    if: ${{ inputs.python_3_13 }}
    name: build_test_linux_python3.13
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install Dependencies
        run: pip install maturin pytest numpy setuptools
      - name: Build Test
        run: pip install ${{ inputs.py_interface_folder }}/
      - name: Test pytest
        if: ${{ inputs.has_python_tests }}
        run: pytest ${{ inputs.py_interface_folder }}/python_tests

  build_test_windows:
    name: build_test_windows_${{ matrix.python.interpreter }}
    if: ${{ inputs.windows }}
    runs-on: "windows-latest"
    strategy:
      matrix:
        python: [
            { py: '3.9', interpreter: "python3.9" },
            { py: '3.10', interpreter: "python3.10" },
            { py: '3.11', interpreter: "python3.11" },
            { py: '3.12', interpreter: "python3.12" },
        ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
      - uses: actions/setup-python@v5
        with:
          python-version: '${{ matrix.python.py }}'
      - name: Install Dependencies
        run: pip install maturin pytest numpy
      - name: Build Test
        run: pip install ${{ inputs.py_interface_folder }}/
      - name: Test pytest
        if: ${{ inputs.has_python_tests }}
        run: pytest ${{ inputs.py_interface_folder }}/python_tests
  
  build_test_windows_py313:
    name: build_test_windows_python3.13
    if: ${{ inputs.windows && inputs.python_3_13 }}
    runs-on: "windows-latest"
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install Dependencies
        run: pip install maturin pytest numpy setuptools
      - name: Build Test
        run: pip install ${{ inputs.py_interface_folder }}/
      - name: Test pytest
        if: ${{ inputs.has_python_tests }}
        run: pytest ${{ inputs.py_interface_folder }}/python_tests

  build_test_macos:
    name: build_test_macos_${{ matrix.python.interpreter }}
    if: ${{ inputs.macos }}
    runs-on: "macos-13"
    strategy:
      matrix:
        python: [
            { py: '3.9', interpreter: "python3.9" },
            { py: '3.10', interpreter: "python3.10" },
            { py: '3.11', interpreter: "python3.11" },
            { py: '3.12', interpreter: "python3.12" },
        ]
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: "aarch64-apple-darwin"
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python.py }}
      - name: Install Dependencies
        run: pip install maturin pytest numpy
      - name: Build Test
        run: RUSTFLAGS="-C link-arg=-undefined -C link-arg=dynamic_lookup"pip install ${{ inputs.py_interface_folder }}/
      - name: Test pytest
        if: ${{ inputs.has_python_tests }}
        run: pytest ${{ inputs.py_interface_folder }}/python_tests
  
  build_test_macos_py313:
    name: build_test_macos_python3.13
    if: ${{ inputs.macos && inputs.python_3_13 }}
    runs-on: "macos-13"
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          target: "aarch64-apple-darwin"
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      - name: Install Dependencies
        run: pip install maturin pytest numpy
      - name: Build Test
        run: RUSTFLAGS="-C link-arg=-undefined -C link-arg=dynamic_lookup" pip install ${{ inputs.py_interface_folder }}/
      - name: Test pytest
        if: ${{ inputs.has_python_tests }}
        run: pytest ${{ inputs.py_interface_folder }}/python_tests
