name: reusable_build_tests_rust_pyo3

on:
  workflow_dispatch:
    inputs:
      py_interface_folder:
        description: "Location of the py interface folder"
        required: true
        type: string
      has_python_tests:
        description: "Is there a python_tests folder inside the python interface folder"
        required: false
        default: false
        type: boolean
      windows:
        description: "Run unittests on windows"
        required: false
        default: false
        type: boolean
      macos:
        description: "Run unittests on macOS"
        required: false
        default: true
        type: boolean
      python_3_13:
        description: "Run unittest on Python 3.13"
        required: false
        default: false
        type: boolean
  workflow_call:
    inputs:
      py_interface_folder:
        description: "Location of the py interface folder"
        required: true
        type: string
      has_python_tests:
        description: "Is there a python_tests folder inside the python interface folder"
        required: false
        default: false
        type: boolean
      windows:
        description: "Run unittests on windows"
        required: false
        default: false
        type: boolean
      macos:
        description: "Run unittests on macOS"
        required: false
        default: true
        type: boolean
      python_3_13:
        description: "Run unittest on Python 3.13"
        required: false
        default: false
        type: boolean

jobs:
  test_maturin_builds_linux:
    name: maturin_check_linux-${{ matrix.python.interpreter }}
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python: [
            {py: '3.9', interpreter: "python3.9"},
            {py: '3.10', interpreter: "python3.10"},
            {py: '3.11', interpreter: "python3.11"},
            {py: '3.12', interpreter: "python3.12"},
        ]
    steps:
      - uses: actions/checkout@v4
      # - uses: Swatinem/rust-cache@v2.0.0
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python.py }}
      - name: Install dependencies
        run: |
          pip install maturin pytest numpy
          pip install ${{inputs.py_interface_folder}}/
      - name: test
        if: ${{inputs.has_python_tests}}
        run: |
          pytest ${{inputs.py_interface_folder}}/python_tests
  
  test_maturin_builds_linux_py313:
    if: ${{ inputs.python_3_13 }}
    name: maturin_check_linux-python3.13
    runs-on: "ubuntu-latest"
    steps:
      - uses: actions/checkout@v3
      # - uses: Swatinem/rust-cache@v2.0.0
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
      - uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      - name: Install dependencies
        run: |
          pip install maturin pytest numpy setuptools
          pip install ${{inputs.py_interface_folder}}/
      - name: test
        if: ${{inputs.has_python_tests}}
        run: |
          pytest ${{inputs.py_interface_folder}}/python_tests

  test_maturin_builds_windows:
    name: maturin_check_windows-${{ matrix.python.interpreter }}
    if: ${{ inputs.windows }}
    runs-on: "windows-latest"
    strategy:
      matrix:
        python: [
            {py: '3.9', interpreter: "python3.9"},
            {py: '3.10', interpreter: "python3.10"},
            {py: '3.11', interpreter: "python3.11"},
            {py: '3.12', interpreter: "python3.12"},
        ]
    steps:
      - uses: actions/checkout@v4
      # - uses: Swatinem/rust-cache@v2.0.0
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
      - uses: actions/setup-python@v4
        with:
          python-version: '${{ matrix.python.py }}'
      - name: Install dependencies
        run: |
          pip install maturin pytest numpy
          pip install ${{inputs.py_interface_folder}}/
      - name: test
        if: ${{inputs.has_python_tests}}
        run: |
          pytest ${{inputs.py_interface_folder}}/python_tests
  
  test_maturin_builds_windows_py313:
    name: maturin_check_windows-python3.13
    if: ${{ inputs.windows && inputs.python_3_13 }}
    runs-on: "windows-latest"
    steps:
      - uses: actions/checkout@v3
      # - uses: Swatinem/rust-cache@v2.0.0
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
      - uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      - name: Install dependencies
        run: |
          pip install maturin pytest numpy setuptools
          pip install ${{inputs.py_interface_folder}}/
      - name: test
        if: ${{inputs.has_python_tests}}
        run: |
          pytest ${{inputs.py_interface_folder}}/python_tests

  test_maturin_builds_macos:
    name: maturin_check_macos-${{ matrix.python.interpreter }}
    if: ${{ inputs.macos }}
    runs-on: "macOS-13"
    strategy:
      matrix:
        python: [
            {py: '3.9', interpreter: "python3.9"},
            {py: '3.10', interpreter: "python3.10"},
            {py: '3.11', interpreter: "python3.11"},
            {py: '3.12', interpreter: "python3.12"},
        ]
    steps:
      - uses: actions/checkout@v3
      # - uses: Swatinem/rust-cache@v2.0.0
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: "aarch64-apple-darwin"
          default: true
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python.py }}
      - name: Install dependencies
        run: |
          python -m pip install maturin pytest numpy
          python -m pip install ${{inputs.py_interface_folder}}/
      - name: test
        if: ${{inputs.has_python_tests}}
        run: |
          pytest ${{inputs.py_interface_folder}}/python_tests
  
  test_maturin_builds_macos_py313:
    name: maturin_check_macos-python3.13
    if: ${{ inputs.macos && inputs.python_3_13 }}
    runs-on: "macOS-13"
    steps:
      - uses: actions/checkout@v3
      # - uses: Swatinem/rust-cache@v2.0.0
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          target: "aarch64-apple-darwin"
          default: true
      - uses: actions/setup-python@v4
        with:
          python-version: '3.13'
      - name: Install dependencies
        run: |
          pip install maturin pytest numpy setuptools
          pip install ${{inputs.py_interface_folder}}/
      - name: test
        if: ${{inputs.has_python_tests}}
        run: |
          pytest ${{inputs.py_interface_folder}}/python_tests