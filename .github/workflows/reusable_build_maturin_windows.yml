name: reusable_build_maturin_windows

on:
  workflow_dispatch:
    inputs:
      py_interface_folder:
        description: "Location of the py interface folder"
        required: true
        type: string
      deploy:
        description: "Determines if built python wheels should be deployed to PyPi"
        required: false
        default: false
        type: boolean
      # build_for_arm:
      #   description: "Determines if python wheels should be built for aarch64"
      #   required: false
      #   default: false
      #   type: boolean
      python_3_13:
        description: "Determines if python wheels should be built for Python 3.13"
        required: false
        default: true
        type: boolean
  workflow_call:
    inputs:
      py_interface_folder:
        description: "Location of the py interface folder"
        required: true
        type: string
      deploy:
        description: "Determines if built python wheels should be deployed to PyPi"
        required: false
        default: false
        type: boolean
      # build_for_arm:
      #   description: "Determines if python wheels should be built for aarch64"
      #   required: false
      #   default: false
      #   type: boolean
      python_3_13:
        description: "Determines if python wheels should be built for Python 3.13"
        required: false
        default: true
        type: boolean

jobs:
  maturin_build_windows:
    name: maturin_build_windows
    runs-on: 'windows-latest'
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
      - name: Build Windows Wheels (py3.9-3.12)
        uses: PyO3/maturin-action@v1
        with:
          maturin-version: latest
          command: build
          args: --out wheels -m ${{ inputs.py_interface_folder }}/Cargo.toml --release --locked -i python3.9 python3.10 python3.11 python3.12
      - name: Store Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows_wheels_p_3.9_3.10_3.11_3.12
          path: wheels
  
  maturin_build_windows_py313:
    if: ${{ inputs.python_3_13 }}
    name: maturin_build_windows_py313
    runs-on: 'windows-2025'
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
      - name: Build Windows Wheel (py3.13)
        uses: PyO3/maturin-action@v1
        with:
          maturin-version: latest
          command: build
          args: --out wheels -m ${{ inputs.py_interface_folder }}/Cargo.toml --release --locked -i python3.13
      - name: Store Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows_wheels_p_3.13
          path: wheels

  # maturin_build_windows_arm:
  #   if: ${{ inputs.build_for_arm }}
  #   name: maturin_build_windows_arm
  #   runs-on: 'windows-11-arm'
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions-rust-lang/setup-rust-toolchain@v1
  #       with:
  #         toolchain: stable
  #     - uses: actions/setup-python@v5
  #       with:
  #         python-version: "3.12"
  #     - name: Build Windows Wheels (py3.12)
  #       uses: PyO3/maturin-action@v1
  #       with:
  #         maturin-version: latest
  #         command: build
  #         args: --out wheels -m ${{ inputs.py_interface_folder }}/Cargo.toml --release --locked -i python3.12
  #     - name: Store Artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: windows_arm_wheels_p_3.12
  #         path: wheels
  
  # maturin_build_windows_arm_py313:
  #   if: ${{ inputs.python_3_13 && inputs.build_for_arm }}
  #   name: maturin_build_windows_arm_py313
  #   runs-on: 'windows-11-arm'
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions-rust-lang/setup-rust-toolchain@v1
  #       with:
  #         toolchain: stable
  #     - uses: actions/setup-python@v5
  #       with:
  #         python-version: "3.13"
  #     - name: Build Windows Wheel (py3.13)
  #       uses: PyO3/maturin-action@v1
  #       with:
  #         maturin-version: latest
  #         command: build
  #         args: --out wheels -m ${{ inputs.py_interface_folder }}/Cargo.toml --release --locked -i python3.13
  #     - name: Store Artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: windows_arm_wheels_p_3.13
  #         path: wheels

  deploy:
    if: ${{ inputs.deploy }}
    needs: maturin_build_windows
    runs-on: ubuntu-latest
    steps:
    - uses: actions/setup-python@v5
      with:
        python-version: "3.12"
    - uses: actions/download-artifact@v4
      with:
        path: wheels
        pattern: windows_wheels_p*
        merge-multiple: true  
    - name: Publish
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        python -m pip install --upgrade pip
        pip install twine
        python -m twine upload --skip-existing wheels/*

  # deploy_arm:
  #   if: ${{ inputs.deploy && inputs.build_for_arm }}
  #   needs: [maturin_build_windows_arm]
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/setup-python@v5
  #     with:
  #       python-version: "3.12"
  #   - uses: actions/download-artifact@v4
  #     with:
  #       path: wheels
  #       pattern: windows_arm_wheels_p*
  #       merge-multiple: true  
  #   - name: Publish
  #     env:
  #       TWINE_USERNAME: __token__
  #       TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install twine
  #       python -m twine upload --skip-existing wheels/*