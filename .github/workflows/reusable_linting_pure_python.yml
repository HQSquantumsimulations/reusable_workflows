name: reusable_linting_pure_python

on:
  workflow_dispatch:
    inputs:
      python_folder:
        description: "Location of the python folder"
        required: true
        type: string
      linting_folder:
        description: "Location of the python folder to be linted"
        required: true
        type: string
      windows:
        description: "Run unittests on windows"
        required: false
        default: false
        type: boolean
      macos:
        description: "Run unittests on macOS"
        required: false
        default: true
        type: boolean
  workflow_call:
    inputs:
      python_folder:
        description: "Location of the python folder"
        required: true
        type: string
      linting_folder:
        description: "Location of the python folder to be linted"
        required: true
        type: string
      windows:
        description: "Run unittests on windows"
        required: false
        default: false
        type: boolean
      macos:
        description: "Run unittests on macOS"
        required: false
        default: true
        type: boolean

jobs:

  test_python_linting_linux:
    name: python_check_linux-${{ matrix.python.interpreter }}
    runs-on: "ubuntu-latest"
    strategy:
      matrix:
        python: [
            {py: '3.7', interpreter: "python3.7"},
            {py: '3.8', interpreter: "python3.8"},
            {py: '3.9', interpreter: "python3.9"},
            {py: '3.10', interpreter: "python3.10"},
            {py: '3.11', interpreter: "python3.11"},
        ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python.py }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          pip install pytest pytest-cov flake8 flake8-bugbear flake8-docstrings flake8-annotations darglint mypy qoqo
          pip install ${{inputs.python_folder}}/
      - name: Lint with flake8
        run: |
          flake8 --config=${{inputs.python_folder}}/.flake8 ${{inputs.linting_folder}} --count
      - name: Mypy check
        run: |
          mypy --config-file=${{inputs.python_folder}}/.mypy.ini ${{inputs.linting_folder}}


  test_python_linting_windows:
    name: python_check_windows-${{ matrix.python.interpreter }}
    runs-on: "windows-latest"
    strategy:
      matrix:
        python: [
            {py: '3.7', interpreter: "python3.7"},
            {py: '3.8', interpreter: "python3.8"},
            {py: '3.9', interpreter: "python3.9"},
            {py: '3.10', interpreter: "python3.10"},
            {py: '3.11', interpreter: "python3.11"},
        ]
    steps:
      - uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2.0.0
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          default: true
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python.py }}
          cache: 'pip'
      - name: Install dependencies
        run: |
          pip install pytest pytest-cov flake8 flake8-bugbear flake8-docstrings flake8-annotations darglint mypy qoqo
          pip install ${{inputs.py_interface_folder}}/
      - name: Lint with flake8
        run: |
          flake8 --config=${{inputs.python_folder}}/.flake8 ${{inputs.linting_folder}} --count
      - name: Mypy check
        run: |
          mypy --config-file=${{inputs.python_folder}}/.mypy.ini ${{inputs.linting_folder}}
